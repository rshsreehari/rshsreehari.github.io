{"componentChunkName":"component---src-pages-archive-js","path":"/archive/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"2025-05-01","title":"16-bit Non-Pipelined Processor on FPGA","tech":["Verilog","Logic design","FPGA","Xilinx Vivado","Basys-3","Testbenches"],"github":"https://github.com/rshsreehari","external":"https://www.linkedin.com/in/rsreeehari/details/projects/","company":"UB"},"html":"<p>Designed a <strong>16-bit CPU in Verilog</strong> (ALU, register file, memory, control unit) and deployed on <strong>Basys-3 FPGA</strong>. Verified correctness with custom testbenches in <strong>Vivado</strong>, executing programs with arithmetic, loads/stores, and branching — bridging <strong>hardware design and low-level architecture concepts</strong>.</p>"}},{"node":{"frontmatter":{"date":"2025-04-15","title":"TCP-Based Text Chat Application","tech":["C++","Computer Networking","Data Structures","Linux"],"github":"https://github.com/rshsreehari","external":"https://www.linkedin.com/in/rsreeehari/details/projects/","company":"UB"},"html":"<p>Built a <strong>multi-client terminal chat app in C++</strong> using <strong>POSIX sockets</strong> and select() for I/O multiplexing without threads. Supported <strong>unicast/broadcast messaging, offline queues, and user blocking,</strong> with structured logging on Linux — showcasing <strong>network protocol handling and systems-level programming.</strong></p>"}},{"node":{"frontmatter":{"date":"2025-04-01","title":"ns-3 Network Simulation","tech":["C++","Computer Networks","Linux"],"github":"https://github.com/rshsreehari","external":"https://www.linkedin.com/in/rsreeehari/details/projects/","company":"UB"},"html":"<p>Modeled <strong>LAN, Wi-Fi, and point-to-point topologies</strong> in ns-3, generating and analyzing traffic traces with <strong>Wireshark, Tcpdump, and NetAnim</strong>. Automated experiments in <strong>C++</strong> and visualized throughput/congestion patterns in <strong>Gnuplot</strong>, gaining hands-on insight into <strong>TCP slow start, avoidance, and recovery</strong>.</p>"}},{"node":{"frontmatter":{"date":"2024-12-01","title":"Data-Driven Identification of Optimal Tree Planting Sites","tech":["Python","Apache Spark","Spark SQL","ML","K-Means","Linear Regression","Decision Tree","MapReduce (RDD)"],"github":"https://github.com/rshsreehari","external":"https://www.linkedin.com/in/rsreeehari/details/projects/","company":"UB"},"html":"<p>Transformed <strong>133K+ raw urban forestry records</strong> into a planning tool using <strong>PySpark</strong>. Clustered neighborhoods by ecological benefit with <strong>K-Means</strong>, modeled benefit trends via <strong>Linear Regression</strong>, and classified zones with a <strong>Decision Tree</strong>. Designed <strong>interactive Folium maps</strong> that surfaced <strong>priority planting sites</strong>, helping planners maximize ecological and economic impact.</p>"}},{"node":{"frontmatter":{"date":"2023-03-01","title":"Anomaly Detection in Credit Card Transactions","tech":["Python","Scikit-learn","XGBoost","Random Forest","Logistic Regression","SMOTE","Pandas","NumPy","Flutter"],"github":"https://github.com/rshsreehari","external":"https://www.linkedin.com/in/rsreeehari/details/projects/","company":"UB"},"html":"<p>Built an end-to-end <strong>fraud detection pipeline</strong> on <strong>284K+ transactions</strong>, tackling class imbalance with <strong>SMOTE</strong> and training models including <strong>Random Forest, XGBoost, and Logistic Regression</strong>. Achieved a 95% detection rate, reduced false positives by 20%, and deployed results in a lightweight dashboard — demonstrating applied ML in a mission-critical domain.</p>"}}]}},"pageContext":{}}}